"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[40926],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98425:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=n(87462),r=(n(67294),n(3905)),i=n(55064),o=n(58215);const s={title:"Load Balancing",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Learn how to implement load balancing in APISIX using APISIX Ingress Controller, distributing clients requests across multiple upstream nodes."},l=void 0,c={unversionedId:"getting-started/load-balancing",id:"version-2.0.0/getting-started/load-balancing",isDocsHomePage:!1,title:"Load Balancing",description:"Learn how to implement load balancing in APISIX using APISIX Ingress Controller, distributing clients requests across multiple upstream nodes.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-2.0.0/getting-started/load-balancing.md",sourceDirName:"getting-started",slug:"/getting-started/load-balancing",permalink:"/docs/ingress-controller/getting-started/load-balancing",editUrl:"/edit#https://github.com/apache/apisix-ingress-controller/edit/v2.0.0/docs/en/latest/getting-started/load-balancing.md",tags:[],version:"2.0.0",frontMatter:{title:"Load Balancing",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Learn how to implement load balancing in APISIX using APISIX Ingress Controller, distributing clients requests across multiple upstream nodes."},sidebar:"version-2.0.0/docs",previous:{title:"Configure Routes",permalink:"/docs/ingress-controller/getting-started/configure-routes"},next:{title:"Key Authentication",permalink:"/docs/ingress-controller/getting-started/key-authentication"}},p=[{value:"Prerequisite",id:"prerequisite",children:[]},{value:"Configure Load Balancing",id:"configure-load-balancing",children:[]},{value:"Verify",id:"verify",children:[]}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Load balancing is a technique used to distribute network request loads. It is a key consideration in designing systems that need to handle a large volume of traffic, allowing for improved system performance, scalability, and reliability."),(0,r.kt)("p",null,"In this tutorial, you will create a route using APISIX Ingress Controller with two upstream services and uses the round-robin load balancing algorithm to load balance requests."),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Complete ",(0,r.kt)("a",{parentName:"li",href:"/docs/ingress-controller/getting-started/get-apisix-ingress-controller"},"Get APISIX and APISIX Ingress Controller"),".")),(0,r.kt)("h2",{id:"configure-load-balancing"},"Configure Load Balancing"),(0,r.kt)("p",null,"For demonstration purpose, you will be creating a route to the ",(0,r.kt)("a",{parentName:"p",href:"https://httpbin.org"},"publicly hosted httpbin services")," and ",(0,r.kt)("a",{parentName:"p",href:"https://mock.api7.ai"},"mock.api7.ai"),". If you would like to proxy requests to services on Kubernetes, please modify accordingly."),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you are using Gateway API, you should first configure the GatewayClass and Gateway resources:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Show configuration"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  name: apisix\nspec:\n  controllerName: apisix.apache.org/apisix-ingress-controller\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: apisix\nspec:\n  gatewayClassName: apisix\n  listeners:\n  - name: http\n    protocol: HTTP\n    port: 80\n  infrastructure:\n    parametersRef:\n      group: apisix.apache.org\n      kind: GatewayProxy\n      name: apisix-config\n"))),(0,r.kt)("p",{parentName:"div"},"If you are using Ingress or APISIX custom resources, you can proceed without additional configuration."))),(0,r.kt)(i.Z,{groupId:"k8s-api",defaultValue:"gateway-api",values:[{label:"Gateway API",value:"gateway-api"},{label:"APISIX CRD",value:"apisix-crd"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"gateway-api",mdxType:"TabItem"},(0,r.kt)("p",null,"APISIX Ingress controller installed with the current helm chart version (",(0,r.kt)("inlineCode",{parentName:"p"},"apisix-2.11.2"),") has a bug in load balancing, which is actively being fixed.")),(0,r.kt)(o.Z,{value:"apisix-crd",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a Kubernetes manifest file for a route that proxy requests to two upstream services for load balancing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="lb-route.yaml"',title:'"lb-route.yaml"'},"apiVersion: apisix.apache.org/v2\nkind: ApisixUpstream\nmetadata:\n  name: httpbin-external-domain\nspec:\n  scheme: https\n  passHost: node\n  externalNodes:\n  - type: Domain\n    name: httpbin.org\n    weight: 1\n    port: 443\n---\napiVersion: apisix.apache.org/v2\nkind: ApisixUpstream\nmetadata:\n  name: mockapi7-external-domain\nspec:\n  scheme: https\n  passHost: node\n  externalNodes:\n  - type: Domain\n    name: mock.api7.ai\n    weight: 1\n    port: 443\n---\napiVersion: apisix.apache.org/v2\nkind: ApisixRoute\nmetadata:\n  name: lb-route\nspec:\n  ingressClassName: apisix\n  http:\n    - name: lb-route\n      match:\n        paths:\n          - /headers\n      upstreams:\n      - name: httpbin-external-domain\n      - name: mockapi7-external-domain\n")),(0,r.kt)("p",null,"Apply the configuration to your cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f lb-route.yaml\n")))),(0,r.kt)("h2",{id:"verify"},"Verify"),(0,r.kt)("p",null,"Expose the service port to your local machine by port forwarding:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl port-forward svc/apisix-gateway 9080:80 &\n")),(0,r.kt)("p",null,"Generate 50 consecutive requests to the route to see the load-balancing effect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'resp=$(seq 50 | xargs -I{} curl "http://127.0.0.1:9080/headers" -sL) && \\\n  count_httpbin=$(echo "$resp" | grep "httpbin.org" | wc -l) && \\\n  count_mockapi7=$(echo "$resp" | grep "mock.api7.ai" | wc -l) && \\\n  echo httpbin.org: $count_httpbin, mock.api7.ai: $count_mockapi7\n')),(0,r.kt)("p",null,"The command keeps count of the number of requests that was handled by the two services respectively. The output shows that requests were distributed over to the two services:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"httpbin.org: 23, mock.api7.ai: 27\n")),(0,r.kt)("p",null,"The distribution of requests across services should be close to 1:1 but might not always result in a perfect 1:1 ratio. The slight deviation is due to APISIX operates with multiple workers."))}d.isMDXComponent=!0},58215:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294);const r=function(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},55064:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(79443);const i=function(){const e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var o=n(86010);const s="tabItem_vU9c",l="tabItemActive_cw6a";const c=function(e){var t;const{lazy:n,block:r,defaultValue:c,values:p,groupId:u,className:d}=e,m=a.Children.toArray(e.children),g=null!=p?p:m.map((e=>({value:e.props.value,label:e.props.label}))),h=null!=c?c:null==(t=m.find((e=>e.props.default)))?void 0:t.props.value,{tabGroupChoices:f,setTabGroupChoices:b}=i(),[v,y]=(0,a.useState)(h),k=[];if(null!=u){const e=f[u];null!=e&&e!==v&&g.some((t=>t.value===e))&&y(e)}const w=e=>{const t=e.currentTarget,n=k.indexOf(t),a=g[n].value;y(a),null!=u&&(b(u,a),setTimeout((()=>{(function(e){const{top:t,left:n,bottom:a,right:r}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:o}=window;return t>=0&&r<=o&&a<=i&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((()=>t.classList.remove(l)),2e3))}),150))},I=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=k.indexOf(e.target)+1;n=k[t]||k[0];break}case"ArrowLeft":{const t=k.indexOf(e.target)-1;n=k[t]||k[k.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},d)},g.map((e=>{let{value:t,label:n}=e;return a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,o.Z)("tabs__item",s,{"tabs__item--active":v===t}),key:t,ref:e=>k.push(e),onKeyDown:I,onFocus:w,onClick:w},null!=n?n:t)}))),n?(0,a.cloneElement)(m.filter((e=>e.props.value===v))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},m.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}},79443:(e,t,n)=>{n.d(t,{Z:()=>a});const a=(0,n(67294).createContext)(void 0)},86010:(e,t,n)=>{function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:()=>r});const r=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}}}]);