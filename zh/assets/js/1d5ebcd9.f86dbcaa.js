"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[60278],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>m});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var i=n.createContext({}),s=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},u=function(t){var e=s(t.components);return n.createElement(i.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,i=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),d=s(a),m=r,g=d["".concat(i,".").concat(m)]||d[m]||c[m]||l;return a?n.createElement(g,o(o({ref:e},u),{},{components:a})):n.createElement(g,o({ref:e},u))}));function m(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,o=new Array(l);o[0]=d;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p.mdxType="string"==typeof t?t:r,o[1]=p;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},55091:(t,e,a)=>{a.r(e),a.d(e,{contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={title:"Gateway API",keywords:["APISIX Ingress","Apache APISIX","Kubernetes Ingress","Gateway API"]},o=void 0,p={unversionedId:"concepts/gateway-api",id:"version-2.0.0/concepts/gateway-api",isDocsHomePage:!1,title:"Gateway API",description:"Gateway API is dedicated to achieving expressive and scalable Kubernetes service networking through various custom resources.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-2.0.0/concepts/gateway-api.md",sourceDirName:"concepts",slug:"/concepts/gateway-api",permalink:"/zh/docs/ingress-controller/concepts/gateway-api",editUrl:"/zh/edit#https://github.com/apache/apisix-ingress-controller/edit/v2.0.0/docs/zh/latest/concepts/gateway-api.md",tags:[],version:"2.0.0",frontMatter:{title:"Gateway API",keywords:["APISIX Ingress","Apache APISIX","Kubernetes Ingress","Gateway API"]},sidebar:"version-2.0.0/docs",previous:{title:"APISIX Ingress Controller Resources",permalink:"/zh/docs/ingress-controller/concepts/resources"},next:{title:"Deployment Architecture",permalink:"/zh/docs/ingress-controller/concepts/deployment-architecture"}},i=[{value:"Concepts",id:"concepts",children:[]},{value:"Gateway API Support Level",id:"gateway-api-support-level",children:[]},{value:"HTTPRoute",id:"httproute",children:[{value:"Example",id:"example",children:[]}]}],s={toc:i};function u(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Gateway API is dedicated to achieving expressive and scalable Kubernetes service networking through various custom resources."),(0,r.kt)("p",null,"By supporting Gateway API, the APISIX Ingress controller can realize richer functions, including Gateway management, multi-cluster support, and other features. It is also possible to manage running instances of the APISIX gateway through Gateway API resource management."),(0,r.kt)("h2",{id:"concepts"},"Concepts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GatewayClass"),": Defines a set of Gateways that share a common configuration and behavior. Each GatewayClass is handled by a single controller, although controllers may handle more than one GatewayClass."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Gateway"),": A resource in Kubernetes that describes how traffic can be translated to services within the cluster."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"HTTPRoute"),": Can be attached to a Gateway to configure HTTP")),(0,r.kt)("p",null,"For more information about Gateway API, please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://gateway-api.sigs.k8s.io/"},"Gateway API"),"."),(0,r.kt)("h2",{id:"gateway-api-support-level"},"Gateway API Support Level"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Resource"),(0,r.kt)("th",{parentName:"tr",align:null},"Core Support Level"),(0,r.kt)("th",{parentName:"tr",align:null},"Extended Support Level"),(0,r.kt)("th",{parentName:"tr",align:null},"Implementation-Specific Support Level"),(0,r.kt)("th",{parentName:"tr",align:null},"API Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GatewayClass"),(0,r.kt)("td",{parentName:"tr",align:null},"Supported"),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Gateway"),(0,r.kt)("td",{parentName:"tr",align:null},"Partially supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Partially supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HTTPRoute"),(0,r.kt)("td",{parentName:"tr",align:null},"Supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Partially supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GRPCRoute"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ReferenceGrant"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1beta1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TLSRoute"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1alpha2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TCPRoute"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1alpha2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"UDPRoute"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1alpha2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BackendTLSPolicy"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported"),(0,r.kt)("td",{parentName:"tr",align:null},"v1alpha3")))),(0,r.kt)("h2",{id:"httproute"},"HTTPRoute"),(0,r.kt)("p",null,"The HTTPRoute resource allows users to configure HTTP routing by matching HTTP traffic and forwarding it to Kubernetes backends. Currently, the only backend supported by APISIX Gateway is the Service resource."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"The following example demonstrates how to configure an HTTPRoute resource to route traffic to the ",(0,r.kt)("inlineCode",{parentName:"p"},"httpbin")," service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  name: apisix\nspec:\n  controllerName: "apisix.apache.org/apisix-ingress-controller"\n\n---\n\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: apisix\n  namespace: default\nspec:\n  gatewayClassName: apisix\n  listeners:\n  - name: http\n    protocol: HTTP\n    port: 80\n\n---\n\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: httpbin\nspec:\n  parentRefs:\n  - name: apisix\n  hostnames:\n  - backends.example\n  rules:\n  - matches: \n    - path:\n        type: Exact\n        value: /get\n    - path:\n        type: Exact\n        value: /headers\n    backendRefs:\n    - name: httpbin\n      port: 80\n')))}u.isMDXComponent=!0}}]);